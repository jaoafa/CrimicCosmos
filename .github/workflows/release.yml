name: Release

on:
  pull_request_target:
    branches:
      - main
    types:
      - closed

jobs:
  release:
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true

    steps:
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - uses: actions/checkout@v3
        with:
          path: CrimicCosmos

      - uses: actions/checkout@v3
        with:
          path: CrimicCosmos-main
          ref: main
          fetch-depth: 0

      - name: Reset latest merge
        run: |
          cd CrimicCosmos-main
          git reset --hard HEAD~1
          cd ..

      - name: Get main metadata
        id: mainMetadata
        run: |
          NAME=`cat CrimicCosmos-main/_metadata | jq -r .name`
          VERSION=`cat CrimicCosmos-main/_metadata | jq -r .version`
          echo "NAME=${NAME}" >> $GITHUB_OUTPUT
          echo "VERSION=${VERSION}" >> $GITHUB_OUTPUT
          echo "VERSION: ${VERSION}"

      - name: Get current metadata
        id: metadata
        run: |
          NAME=`cat CrimicCosmos/_metadata | jq -r .name`
          VERSION=`cat CrimicCosmos/_metadata | jq -r .version`
          echo "NAME=${NAME}" >> $GITHUB_OUTPUT
          echo "VERSION=${VERSION}" >> $GITHUB_OUTPUT
          echo "FILENAME=${NAME}-${VERSION}.pak" >> $GITHUB_OUTPUT
          echo "VERSION: ${VERSION}"

      - name: Pack
        if: ${{ steps.mainMetadata.outputs.VERSION != steps.metadata.outputs.VERSION }}
        run: npx sbpak pack CrimicCosmos ${{ steps.metadata.outputs.FILENAME }}

      - name: Generate changelog
        if: ${{ steps.mainMetadata.outputs.VERSION != steps.metadata.outputs.VERSION }}
        run: |
          gh api "repos/{owner}/{repo}/releases/generate-notes" -f tag_name='v${{ steps.metadata.outputs.VERSION }}' -f previous_tag_name='v${{ steps.mainMetadata.outputs.VERSION }}' | jq -r .body > ../changelog.md
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Release
        id: create_release
        if: ${{ steps.mainMetadata.outputs.VERSION != steps.metadata.outputs.VERSION }}
        uses: ncipollo/release-action@v1.12.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag: v${{ steps.metadata.outputs.VERSION }}
          name: v${{ steps.metadata.outputs.VERSION }}
          bodyFile: changelog.md
          draft: false
          prerelease: false
          artifacts: ${{ steps.metadata.outputs.FILENAME }}

      - name: Released comment
        if: ${{ steps.mainMetadata.outputs.VERSION != steps.metadata.outputs.VERSION }}
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `# リリースが完了しました\n\n${{ steps.create_release.outputs.html_url }}`
            })
